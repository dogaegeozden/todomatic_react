[{"/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/index.js":"1","/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/App.js":"2","/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/reportWebVitals.js":"3","/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/components/Form.js":"4","/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/components/Todo.js":"5","/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/components/FilterButton.js":"6"},{"size":572,"mtime":1663628610438,"results":"7","hashOfConfig":"8"},{"size":3767,"mtime":1663636576876,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1663375117163,"results":"10","hashOfConfig":"8"},{"size":1631,"mtime":1663636804099,"results":"11","hashOfConfig":"8"},{"size":3816,"mtime":1663636931793,"results":"12","hashOfConfig":"8"},{"size":553,"mtime":1663552749345,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j0dyw5",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/index.js",[],[],"/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/App.js",["35"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nconst FILTER_MAP = {\n    All: () => true,\n    Active: (task) => !task.completed,\n    Completed: (task) => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\n\n// A react component(self-contained, logical pieces of code) named App that takes props(data) in. And, creates an interactive graphical user interface\nfunction App(props) {\n    const [filter, setFilter] = useState('All');\n    const [tasks, setTasks] = useState(props.tasks);\n\n    function toggleTaskCompleted(id) {\n        const updatedTasks = tasks.map((task) => {\n            // if this task has the same ID as the edited task\n            if (id === task.id) {\n                // use object spread to make a new object\n                // whose `completed` prop has been inverted\n                return {...task, completed: !task.completed}\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    }\n\n    function deleteTask(id) {\n        const remainingTasks = tasks.filter((task) => id !== task.id);\n        setTasks(remainingTasks);\n    }\n\n    function editTask(id, newName) {\n        const editedTaskList = tasks.map((task) => {\n            // if this task has the same ID as the edited task\n            if (id === task.id) {\n                const deadLine = document.querySelector(\"#editDeadLine\").value\n                return {...task, name: newName, deadLine: `${deadLine}`}\n            }\n            return task;\n        });\n        setTasks(editedTaskList);\n    }\n\n    const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n        <Todo\n        id={task.id}\n        name={task.name}\n        currentDate={task.currentDate}\n        deadLine={task.deadLine}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n        />\n    ));\n\n    const filterList = FILTER_NAMES.map((name) => (\n        <FilterButton\n        key={name}\n        name={name}\n        isPressed={name === filter}\n        setFilter={setFilter}\n        />\n    ));\n\n    function addTask(name) {\n        const currentDate = new Date();\n        const deadLine = document.querySelector(\"#deadLine\").value\n        const newTask = { id: `todo-${nanoid()}`, name, completed: false, currentDate: `${currentDate}`, deadLine: `${deadLine}` };\n        setTasks([...tasks, newTask]);\n    }\n\n    const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n    const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n    const listHeadingRef = useRef(null);\n    const prevTaskLength = usePrevious(tasks.length);\n\n    useEffect(() => {\n        if (tasks.length - prevTaskLength === -1) {\n            listHeadingRef.current.focus();\n        }\n    }, [tasks.length, prevTaskLength]);\n\n    return (\n        <div className=\"todoapp stack-large\">\n            <h1>TodoMatic</h1>\n                <Form addTask={addTask} />\n            <div className=\"filters btn-group stack-exception\">\n                {filterList}\n            </div>\n            <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n                {headingText}\n            </h2>\n            <ul\n            role=\"list\"\n            className=\"todo-list stack-large stack-exception\"\n            aria-labelledby=\"list-heading\"\n            >\n                {taskList}\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n",[],"/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/reportWebVitals.js",[],[],[],"/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/components/Form.js",[],[],"/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/components/Todo.js",[],[],"/media/veracrypt1/bks&nts/server_side_developement_MDN/Exercises/react_exer/to_do_app_react/moz-todo-react/src/components/FilterButton.js",[],[],{"ruleId":"36","severity":1,"message":"37","line":113,"column":13,"nodeType":"38","endLine":117,"endColumn":14},"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement"]